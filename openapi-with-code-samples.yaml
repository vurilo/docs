openapi: 3.0.1
info:
  title: Academy Kit Auth Api
  version: v1
paths:
  /api/Account:
    get:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModel'
  /api/Account/Login:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequestModel'
      responses:
        '200':
          description: Success
  /api/Account/Logout:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
      responses:
        '200':
          description: Success
  /api/Account/ForgotPassword:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequestModel'
      responses:
        '200':
          description: Success
  /api/Account/VerifyResetToken:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyResetTokenModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyResetTokenModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyResetTokenModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationTokenResponseModel'
  /api/Account/ResetPassword:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestModel'
      responses:
        '200':
          description: Success
  /api/Account/RefreshToken:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestModel'
      responses:
        '200':
          description: Success
  /api/Account/ChangePassword:
    post:
      tags:
        - Account
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestModel'
      responses:
        '200':
          description: Success
  /api/AIKey:
    get:
      tags:
        - AIKey
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiKeyResponseModel'
    put:
      tags:
        - AIKey
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiKeyRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AiKeyRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AiKeyRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiKeyResponseModel'
  /api/AITrainingGenerator:
    get:
      tags:
        - AITrainingGenerator
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Assessment:
    get:
      tags:
        - Assessment
      parameters:
        - name: UserId
          in: query
          schema:
            type: string
            format: uuid
        - name: AssessmentStatus
          in: query
          schema:
            $ref: '#/components/schemas/AssessmentStatus'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResponseModelSearchResult'
    post:
      tags:
        - Assessment
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResponseModel'
  /api/Assessment/status:
    patch:
      tags:
        - Assessment
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssessmentStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssessmentStatusRequestModel'
      responses:
        '200':
          description: Success
  /api/Assessment/{identity}:
    get:
      tags:
        - Assessment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResponseModel'
    put:
      tags:
        - Assessment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResponseModel'
    delete:
      tags:
        - Assessment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/AssessmentExam/{identity}/AnswerSubmission:
    post:
      tags:
        - AssessmentExam
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssessmentSubmissionRequestModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssessmentSubmissionRequestModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssessmentSubmissionRequestModel'
      responses:
        '200':
          description: Success
  /api/AssessmentExam/{identity}/GetResults:
    get:
      tags:
        - AssessmentExam
      parameters:
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResultResponseModelSearchResult'
  /api/AssessmentExam/{identity}/GetStudentResults/{userId}:
    get:
      tags:
        - AssessmentExam
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAssessmentResultResponseModel'
  /api/AssessmentExam/{identity}/GetResultDetail/{assessmentSubmissionId}/detail:
    get:
      tags:
        - AssessmentExam
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: assessmentSubmissionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentUserResultResponseModel'
  /api/AssessmentExam/{identity}/GetStudentResults/{userId}/Export:
    get:
      tags:
        - AssessmentExam
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/AssessmentQuestion:
    get:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: query
          schema:
            type: string
        - name: AssessmentIdentity
          in: query
          schema:
            type: string
            format: uuid
        - name: AssessmentSlug
          in: query
          schema:
            type: string
        - name: UserId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssessmentQuestionResponseModelSearchResult
  /api/AssessmentQuestion/{identity}:
    post:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentQuestionResponseModel'
    get:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentQuestionResponseModel'
    put:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssessmentQuestionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentQuestionResponseModel'
    delete:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/AssessmentQuestion/{identity}/ExamQuestion:
    get:
      tags:
        - AssessmentQuestion
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentExamResponseModel'
  /api/Assignment:
    get:
      tags:
        - Assignment
      parameters:
        - name: LessonIdentity
          in: query
          schema:
            type: string
        - name: UserId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentResponseModel'
    post:
      tags:
        - Assignment
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponseModel'
  /api/Assignment/{identity}:
    get:
      tags:
        - Assignment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponseModel'
    put:
      tags:
        - Assignment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponseModel'
    delete:
      tags:
        - Assignment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Assignment/{lessonIdentity}/submissions:
    post:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentSubmissionRequestModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentSubmissionRequestModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentSubmissionRequestModel'
      responses:
        '200':
          description: Success
  /api/Assignment/{lessonIdentity}/user/{userId}:
    get:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSubmissionStudentResponseModel'
  /api/Assignment/{lessonIdentity}/review:
    post:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
      responses:
        '200':
          description: Success
  /api/Assignment/{lessonIdentity}/review/{id}:
    put:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequestModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Assignment/{lessonIdentity}/AssignmentExport:
    get:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Assignment/{lessonIdentity}/AssignmentIndividualExport:
    get:
      tags:
        - Assignment
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/course/{identity}/certificate/detail:
    get:
      tags:
        - Certificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseCertificateResponseModel'
  /api/course/{identity}/certificate:
    post:
      tags:
        - Certificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCertificateRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CourseCertificateRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CourseCertificateRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseCertificateResponseModel'
  /api/course/{identity}/certificate/issue:
    post:
      tags:
        - Certificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateIssueRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CertificateIssueRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CertificateIssueRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseCertificateIssuedResponseModel'
  /api/course/{identity}/comments:
    get:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseModelSearchResult'
    post:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseModel'
  /api/course/{identity}/comments/{id}:
    put:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseModel'
    delete:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReplyResponseModelSearchResult'
  /api/course/{identity}/comments/{id}/CommentReply:
    post:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReplyResponseModel'
  /api/course/{identity}/comments/{id}/CommentReply/{replyId}:
    put:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: replyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReplyResponseModel'
    delete:
      tags:
        - Comment
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: replyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Course:
    get:
      tags:
        - Course
      parameters:
        - name: EnrollmentStatus
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CourseEnrollmentStatus'
        - name: IncludePast
          in: query
          schema:
            type: boolean
        - name: Status
          in: query
          schema:
            $ref: '#/components/schemas/CourseStatus'
        - name: UserId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModelSearchResult'
    post:
      tags:
        - Course
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModel'
  /api/Course/{identity}:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModel'
    put:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CourseRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModel'
    delete:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Course/{identity}/updateCourse:
    patch:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Course/status:
    patch:
      tags:
        - Course
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CourseStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CourseStatusRequestModel'
      responses:
        '200':
          description: Success
  /api/Course/{identity}/enroll:
    post:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Course/{identity}/lessonStatistics:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonStatisticsResponseModelSearchResult'
  /api/Course/{identity}/statistics:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseStatisticsResponseModel'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonStudentResponseModelSearchResult'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/summary:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSummaryResponseModel'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/submission:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamSubmissionResponseModel'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/AssignmentSummary:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSummaryResponseModel'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/AssignmentSubmission:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssignmentSubmissionResponseModelSearchResult
  /api/Course/{identity}/studentStatistics:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/StudentCourseStatisticsResponseModelSearchResult
  /api/Course/{identity}/studentStatistics/{userId}:
    get:
      tags:
        - Course
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonStudentResponseModel'
  /api/Course/user/{userId}:
    get:
      tags:
        - Course
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModelSearchResult'
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/export:
    get:
      tags:
        - Course
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Course/{identity}/lessonStatistics/{lessonIdentity}/exportSubmission:
    get:
      tags:
        - Course
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/CourseTeacher:
    get:
      tags:
        - CourseTeacher
      parameters:
        - name: CourseIdentity
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseTeacherResponseModelSearchResult'
    post:
      tags:
        - CourseTeacher
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseTeacherRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CourseTeacherRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CourseTeacherRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseTeacherResponseModel'
  /api/CourseTeacher/{id}:
    delete:
      tags:
        - CourseTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Dashboard:
    get:
      tags:
        - Dashboard
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponseModel'
  /api/Dashboard/course:
    get:
      tags:
        - Dashboard
      parameters:
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardCourseResponseModelSearchResult'
  /api/Dashboard/UpcomingLesson:
    get:
      tags:
        - Dashboard
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardLessonResponseModel'
  /api/Department:
    get:
      tags:
        - Department
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
        - name: departmentName
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseModelSearchResult'
    post:
      tags:
        - Department
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseModel'
  /api/Department/{identity}:
    get:
      tags:
        - Department
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseModel'
    put:
      tags:
        - Department
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepartmentRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseModel'
    delete:
      tags:
        - Department
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Department/{departmentName}/identity:
    get:
      tags:
        - Department
      parameters:
        - name: departmentName
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseModel'
  /api/Department/{identity}/status:
    patch:
      tags:
        - Department
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseModel'
  /api/Department/{identity}/users:
    get:
      tags:
        - Department
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseSearchCriteria'
          text/json:
            schema:
              $ref: '#/components/schemas/BaseSearchCriteria'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BaseSearchCriteria'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModelSearchResult'
  /api/Enrollment/Enrollment:
    post:
      tags:
        - Enrollment
      parameters:
        - name: courseIdentity
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
  /api/Enrollment/User:
    get:
      tags:
        - Enrollment
      parameters:
        - name: CourseIdentity
          in: query
          schema:
            type: string
        - name: EnrollmentStatus
          in: query
          schema:
            $ref: '#/components/schemas/EnrollmentMemberStatusEnum'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModelSearchResult'
  /api/certificate/external:
    post:
      tags:
        - ExternalCertificate
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseModel'
    get:
      tags:
        - ExternalCertificate
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateResponseModel'
  /api/certificate/{identity}/external:
    put:
      tags:
        - ExternalCertificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CertificateRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseModel'
    delete:
      tags:
        - ExternalCertificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/certificate/internal:
    get:
      tags:
        - ExternalCertificate
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseCertificateIssuedResponseModel'
  /api/certificate/{identity}:
    get:
      tags:
        - ExternalCertificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseModel'
  /api/certificate/{identity}/verify:
    patch:
      tags:
        - ExternalCertificate
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/CertificateStatus'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/certificate/external/{userId}:
    get:
      tags:
        - ExternalCertificate
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateResponseModel'
  /api/certificate/review:
    get:
      tags:
        - ExternalCertificate
      parameters:
        - name: CompletedCourse
          in: query
          schema:
            type: boolean
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseModelSearchResult'
  /api/Feedback:
    get:
      tags:
        - Feedback
      parameters:
        - name: LessonIdentity
          in: query
          schema:
            type: string
        - name: UserId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackResponseModel'
    post:
      tags:
        - Feedback
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponseModel'
  /api/Feedback/{identity}:
    get:
      tags:
        - Feedback
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponseModel'
    put:
      tags:
        - Feedback
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedbackRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponseModel'
    delete:
      tags:
        - Feedback
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Feedback/{lessonIdentity}/submissions:
    post:
      tags:
        - Feedback
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FeedbackSubmissionRequestModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FeedbackSubmissionRequestModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FeedbackSubmissionRequestModel'
      responses:
        '200':
          description: Success
  /api/Feedback/{lessonIdentity}/users:
    get:
      tags:
        - Feedback
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackSubmissionStudentResponseModel'
  /api/Feedback/{lessonIdentity}/export:
    get:
      tags:
        - Feedback
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Feedback/{lessonIdentity}/chart:
    get:
      tags:
        - Feedback
      parameters:
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedBackChartResponseModel'
  /api/Group:
    get:
      tags:
        - Group
      parameters:
        - name: Role
          in: query
          schema:
            $ref: '#/components/schemas/UserRole'
        - name: DepartmentIdentity
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponseModelSearchResult'
    post:
      tags:
        - Group
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponseModel'
  /api/Group/{identity}:
    get:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponseModel'
    put:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponseModel'
    delete:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Group/{identity}/members:
    get:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberResponseModelSearchResult'
  /api/Group/{identity}/notMembers:
    get:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: Role
          in: query
          schema:
            $ref: '#/components/schemas/UserRole'
        - name: DepartmentIdentity
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModelSearchResult'
  /api/Group/{identity}/addMember:
    post:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMemberRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddGroupMemberRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddGroupMemberRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupAddMemberResponseModel'
  /api/Group/{identity}/status/{id}:
    patch:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Group/{identity}/removeMember/{id}:
    delete:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Group/{identity}/courses:
    get:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponseModelSearchResult'
  /api/Group/file:
    post:
      tags:
        - Group
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - File
                - GroupIdentity
              type: object
              properties:
                GroupIdentity:
                  type: string
                File:
                  type: string
                  format: binary
            encoding:
              GroupIdentity:
                style: form
              File:
                style: form
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFileResponseModel'
  /api/Group/files:
    get:
      tags:
        - Group
      parameters:
        - name: GroupIdentity
          in: query
          required: true
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFileResponseModelSearchResult'
  /api/Group/{identity}/files/{fileId}:
    delete:
      tags:
        - Group
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/course/{identity}/lesson:
    get:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CourseIdentity
          in: query
          schema:
            type: string
        - name: SectionIdentity
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponseModelSearchResult'
    post:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponseModel'
  /api/course/{identity}/lesson/detail:
    get:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponseModel'
  /api/course/{identity}/lesson/reorder:
    put:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonReorderRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LessonReorderRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LessonReorderRequestModel'
      responses:
        '200':
          description: Success
  /api/course/{identity}/lesson/{lessonIdentity}:
    put:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LessonRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponseModel'
    delete:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/course/{identity}/lesson/{lessonIdentity}/updateShuffle:
    put:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionSetRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionSetRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionSetRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetResponseModel'
  /api/course/{identity}/lesson/{lessonIdentity}/GetShuffle:
    get:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetResponseModel'
  /api/course/{identity}/lesson/{lessonIdentity}/join:
    get:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingJoinResponseModel'
  /api/course/{identity}/lesson/{lessonidentity}/meetingreport/{userId}:
    get:
      tags:
        - Lesson
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: lessonidentity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingReportResponseModel'
  /api/course/{identity}/lesson/Reorder:
    post:
      tags:
        - Lesson
      parameters:
        - name: lessonIdentity
          in: query
          schema:
            type: string
        - name: lessonType
          in: query
          schema:
            $ref: '#/components/schemas/LessonType'
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
  /api/Level:
    get:
      tags:
        - Level
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LevelResponseModel'
    post:
      tags:
        - Level
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelResponseModel'
  /api/Level/{identity}:
    put:
      tags:
        - Level
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LevelRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelResponseModel'
    delete:
      tags:
        - Level
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/MailNotification:
    get:
      tags:
        - MailNotification
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
        - name: MailId
          in: query
          schema:
            type: string
            format: uuid
        - name: MailType
          in: query
          schema:
            $ref: '#/components/schemas/MailType'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailNotificationResponseModelSearchResult'
    post:
      tags:
        - MailNotification
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailNotificationResponseModel'
  /api/MailNotification/{identity}:
    put:
      tags:
        - MailNotification
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MailNotificationRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailNotificationResponseModel'
    delete:
      tags:
        - MailNotification
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/MailNotification/{mailId}:
    get:
      tags:
        - MailNotification
      parameters:
        - name: mailId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/MailNotification/{identity}/checkSendEmail:
    patch:
      tags:
        - MailNotification
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSendRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MailSendRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MailSendRequestModel'
      responses:
        '200':
          description: Success
  /api/Media/setting:
    put:
      tags:
        - Media
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageSettingRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/StorageSettingRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StorageSettingRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSettingResponseModel'
    get:
      tags:
        - Media
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageSettingResponseModel'
  /api/Media/file:
    post:
      tags:
        - Media
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                Type:
                  $ref: '#/components/schemas/MediaType'
            encoding:
              File:
                style: form
              Type:
                style: form
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - Media
      parameters:
        - name: key
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
  /api/PhysicalLesson/Attendance:
    post:
      tags:
        - PhysicalLesson
      parameters:
        - name: idenity
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/PhysicalLesson/Review:
    post:
      tags:
        - PhysicalLesson
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalLessonReviewRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PhysicalLessonReviewRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PhysicalLessonReviewRequestModel'
      responses:
        '200':
          description: Success
  /api/QuestionPool/{identity}/Question:
    get:
      tags:
        - Question
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: PoolIdentity
          in: query
          schema:
            type: string
        - name: Tags
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: Type
          in: query
          schema:
            $ref: '#/components/schemas/QuestionTypeEnum'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponseModelSearchResult'
    post:
      tags:
        - Question
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponseModel'
  /api/QuestionPool/{identity}/Question/{id}:
    get:
      tags:
        - Question
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponseModel'
    put:
      tags:
        - Question
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponseModel'
    delete:
      tags:
        - Question
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/QuestionAddAi:
    post:
      tags:
        - QuestionAddAi
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiQuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AiQuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AiQuestionRequestModel'
      responses:
        '200':
          description: Success
  /api/QuestionPool:
    get:
      tags:
        - QuestionPool
      parameters:
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolResponseModelSearchResult'
    post:
      tags:
        - QuestionPool
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolResponseModel'
  /api/QuestionPool/{identity}:
    get:
      tags:
        - QuestionPool
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolResponseModel'
    put:
      tags:
        - QuestionPool
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionPoolRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolResponseModel'
    delete:
      tags:
        - QuestionPool
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/QuestionPool/reorder:
    post:
      tags:
        - QuestionPool
      parameters:
        - name: identity
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
  /api/QuestionPoolTeacher:
    get:
      tags:
        - QuestionPoolTeacher
      parameters:
        - name: QuestionPoolIdentity
          in: query
          schema:
            type: string
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/QuestionPoolTeacherResponseModelSearchResult
    post:
      tags:
        - QuestionPoolTeacher
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolTeacherRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionPoolTeacherRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionPoolTeacherRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolTeacherResponseModel'
  /api/QuestionPoolTeacher/{identity}/status:
    patch:
      tags:
        - QuestionPoolTeacher
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/PoolRole'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionPoolTeacherResponseModel'
  /api/QuestionPoolTeacher/{id}:
    delete:
      tags:
        - QuestionPoolTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/QuestionSet/{identity}:
    get:
      tags:
        - QuestionSet
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetResponseModel'
  /api/QuestionSet/{identity}/AddQuestion:
    post:
      tags:
        - QuestionSet
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionSetAddQuestionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/QuestionSetAddQuestionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuestionSetAddQuestionRequestModel'
      responses:
        '200':
          description: Success
  /api/QuestionSet/{identity}/questions:
    get:
      tags:
        - QuestionSet
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionResponseModel'
  /api/QuestionSet/{identity}/startExam:
    post:
      tags:
        - QuestionSet
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetSubmissionResponseModel'
  /api/QuestionSet/{identity}/submission/{questionSetSubmissionId}:
    post:
      tags:
        - QuestionSet
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: questionSetSubmissionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AnswerSubmissionRequestModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AnswerSubmissionRequestModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AnswerSubmissionRequestModel'
      responses:
        '200':
          description: Success
  /api/questionSet/{identity}/results:
    get:
      tags:
        - QuestionSetResult
      parameters:
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/QuestionSetResultResponseModelSearchResult
  /api/questionSet/{identity}/results/{userId}:
    get:
      tags:
        - QuestionSetResult
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResultResponseModel'
  /api/questionSet/{identity}/results/{questionSetSubmissionId}/detail:
    get:
      tags:
        - QuestionSetResult
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: questionSetSubmissionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetUserResultResponseModel'
  /api/course/{identity}/section:
    get:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: CourseId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponseModelSearchResult'
    post:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponseModel'
  /api/course/{identity}/section/{sectionIdentity}:
    get:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: sectionIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponseModel'
    patch:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: sectionIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SectionRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponseModel'
    delete:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: sectionIdentity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/course/{identity}/section/reorder:
    put:
      tags:
        - Section
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
  /api/ServerLog/logs:
    get:
      tags:
        - ServerLog
      parameters:
        - name: StartDate
          in: query
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          schema:
            type: string
            format: date-time
        - name: Severity
          in: query
          schema:
            $ref: '#/components/schemas/SeverityType'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerLogsResponseModelSearchResult'
  /api/ServerLog/{logId}:
    get:
      tags:
        - ServerLog
      parameters:
        - name: logId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerLogsResponseModel'
  /api/admin/settings:
    get:
      tags:
        - Settings
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSettingResponseModel'
  /api/admin/settings/company:
    get:
      tags:
        - Settings
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponseModel'
  /api/admin/settings/{id}:
    put:
      tags:
        - Settings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralSettingRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GeneralSettingRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GeneralSettingRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSettingResponseModel'
  /api/admin/settings/zoom:
    get:
      tags:
        - Settings
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomSettingResponseModel'
  /api/admin/settings/zoom/{id}:
    put:
      tags:
        - Settings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomSettingRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomSettingRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomSettingRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomSettingResponseModel'
  /api/admin/settings/smtp:
    get:
      tags:
        - Settings
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPSettingResponseModel'
  /api/admin/settings/smtp/{id}:
    put:
      tags:
        - Settings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMTPSettingRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SMTPSettingRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SMTPSettingRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPSettingResponseModel'
  /api/course/{identity}/signature:
    get:
      tags:
        - Signature
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignatureResponseModel'
    post:
      tags:
        - Signature
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponseModel'
  /api/course/{identity}/signature/{id}:
    put:
      tags:
        - Signature
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignatureRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponseModel'
    delete:
      tags:
        - Signature
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Skills:
    get:
      tags:
        - Skills
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillsResponseModelSearchResult'
    post:
      tags:
        - Skills
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillsResponseModel'
  /api/Skills/{identity}:
    put:
      tags:
        - Skills
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SkillsRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillsResponseModel'
    delete:
      tags:
        - Skills
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Tag:
    get:
      tags:
        - Tag
      parameters:
        - name: Idenitiy
          in: query
          schema:
            type: string
        - name: TrainingType
          in: query
          schema:
            $ref: '#/components/schemas/TrainingTypeEnum'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelSearchResult'
    post:
      tags:
        - Tag
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModel'
  /api/Tag/{identity}:
    put:
      tags:
        - Tag
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModel'
    delete:
      tags:
        - Tag
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/User:
    get:
      tags:
        - User
      parameters:
        - name: Status
          in: query
          schema:
            $ref: '#/components/schemas/UserStatus'
        - name: Role
          in: query
          schema:
            $ref: '#/components/schemas/UserRole'
        - name: DepartmentId
          in: query
          schema:
            type: string
            format: uuid
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModelSearchResult'
    post:
      tags:
        - User
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModel'
  /api/User/{userId}:
    get:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModel'
    put:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseModel'
  /api/User/{userId}/{courseId}:
    get:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: courseId
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseModel'
  /api/User/trainer:
    get:
      tags:
        - User
      parameters:
        - name: Identity
          in: query
          schema:
            type: string
        - name: LessonType
          in: query
          schema:
            $ref: '#/components/schemas/TrainingTypeEnum'
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainerResponseModel'
  /api/User/bulkUser:
    post:
      tags:
        - User
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - File
              type: object
              properties:
                File:
                  type: string
                  format: binary
            encoding:
              File:
                style: form
      responses:
        '200':
          description: Success
  /api/User/changeEmailRequest:
    put:
      tags:
        - User
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailResponseModel'
  /api/User/{userId}/resendEmail:
    patch:
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/User/resendChangeEmailRequest:
    put:
      tags:
        - User
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendChangeEmailRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ResendChangeEmailRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResendChangeEmailRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailResponseModel'
  /api/User/verifyChangeEmail:
    get:
      tags:
        - User
      parameters:
        - name: token
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/User/sampleFile:
    get:
      tags:
        - User
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Utility/ogimage:
    get:
      tags:
        - Utility
      parameters:
        - name: title
          in: query
          schema:
            type: string
        - name: author
          in: query
          schema:
            type: string
        - name: image
          in: query
          schema:
            type: string
        - name: logo
          in: query
          schema:
            type: string
        - name: company
          in: query
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Utility/certificate:
    get:
      tags:
        - Utility
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/WatchHistory:
    post:
      tags:
        - WatchHistory
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchHistoryResponseModel'
  /api/WatchHistory/pass/{userId}:
    patch:
      tags:
        - WatchHistory
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WatchHistoryRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
  /api/Webhook/zoomrecording:
    post:
      tags:
        - Webhook
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Webhook/joinmeeting:
    post:
      tags:
        - Webhook
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Webhook/leftmeeting:
    post:
      tags:
        - Webhook
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/ZoomLicense:
    get:
      tags:
        - ZoomLicense
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
        - name: CurrentUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: Size
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          in: query
          schema:
            type: string
        - name: SortBy
          in: query
          schema:
            type: string
        - name: SortType
          in: query
          schema:
            $ref: '#/components/schemas/SortType'
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomLicenseResponseModelSearchResult'
    post:
      tags:
        - ZoomLicense
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomLicenseResponseModel'
  /api/ZoomLicense/{id}:
    get:
      tags:
        - ZoomLicense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomLicenseResponseModel'
    put:
      tags:
        - ZoomLicense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomLicenseRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomLicenseResponseModel'
    delete:
      tags:
        - ZoomLicense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/ZoomLicense/{id}/status:
    patch:
      tags:
        - ZoomLicense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomLicenseResponseModel'
  /api/ZoomLicense/Active:
    get:
      tags:
        - ZoomLicense
      parameters:
        - name: LessonIdentity
          in: query
          schema:
            type: string
        - name: StartDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoomLicenseResponseModel'
components:
  schemas:
    AddGroupMemberRequestModel:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AiKeyRequestModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        isActive:
          type: boolean
        aiModel:
          $ref: '#/components/schemas/AiModelEnum'
      additionalProperties: false
    AiKeyResponseModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        aiModel:
          $ref: '#/components/schemas/AiModelEnum'
      additionalProperties: false
    AiModelEnum:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
      type: integer
      format: int32
    AiQuestionRequestModel:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionData'
          nullable: true
      additionalProperties: false
    AnswerSubmissionRequestModel:
      type: object
      properties:
        questionSetQuestionId:
          type: string
          format: uuid
        answers:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    AssessmentAnswerResultModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        attachments:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AssessmentTypeEnum'
        questionOptions:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentQuestionResultOption'
          nullable: true
        isCorrect:
          type: boolean
        orderNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    AssessmentExamQuestionResponseModel:
      type: object
      properties:
        questionId:
          type: string
          format: uuid
        questionName:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AssessmentTypeEnum'
        assessmentQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentOptionsExamResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentExamResponseModel:
      type: object
      properties:
        assessmentId:
          type: string
          format: uuid
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        assessmentName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentExamQuestionResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentOptionsExamResponseModel:
      type: object
      properties:
        optionId:
          type: string
          format: uuid
        option:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isCorrect:
          type: boolean
          nullable: true
      additionalProperties: false
    AssessmentQuestionOptionRequestModel:
      type: object
      properties:
        option:
          type: string
          nullable: true
        isCorrect:
          type: boolean
      additionalProperties: false
    AssessmentQuestionOptionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        option:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isCorrect:
          type: boolean
      additionalProperties: false
    AssessmentQuestionRequestModel:
      type: object
      properties:
        questionName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AssessmentTypeEnum'
        assessmentQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentQuestionOptionRequestModel'
          nullable: true
      additionalProperties: false
    AssessmentQuestionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assessmentId:
          type: string
          format: uuid
        assessmentName:
          type: string
          nullable: true
        questionName:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isActive:
          type: boolean
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AssessmentTypeEnum'
        user:
          $ref: '#/components/schemas/UserModel'
        assessmentQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentQuestionOptionResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentQuestionResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentQuestionResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentQuestionResultOption:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
          nullable: true
        isCorrect:
          type: boolean
        isSelected:
          type: boolean
      additionalProperties: false
    AssessmentRequestModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        retakes:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        weightage:
          type: integer
          format: int32
        skillsCriteriaRequestModels:
          type: array
          items:
            $ref: '#/components/schemas/SkillsCriteriaRequestModel'
          nullable: true
        eligibilityCreationRequestModels:
          type: array
          items:
            $ref: '#/components/schemas/EligibilityCreationRequestModel'
          nullable: true
      additionalProperties: false
    AssessmentResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        retakes:
          type: integer
          format: int32
        remainingAttempt:
          type: integer
          format: int32
        hasCompleted:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        weightage:
          type: integer
          format: int32
        noOfQuestion:
          type: integer
          format: int32
        assessmentStatus:
          $ref: '#/components/schemas/AssessmentStatus'
        isEligible:
          type: boolean
        user:
          $ref: '#/components/schemas/UserModel'
        skillsCriteriaRequestModels:
          type: array
          items:
            $ref: '#/components/schemas/SkillsCriteriaResponseModel'
          nullable: true
        eligibilityCreationRequestModels:
          type: array
          items:
            $ref: '#/components/schemas/EligibilityCreationResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentResultResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assessmentId:
          type: string
          format: uuid
        obtainedMarks:
          type: number
          format: double
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    AssessmentResultResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentResultResponseModel'
          nullable: true
      additionalProperties: false
    AssessmentSetResultDetailModel:
      type: object
      properties:
        questionSetSubmissionId:
          type: string
          format: uuid
        submissionDate:
          type: string
          format: date-time
        totalMarks:
          type: string
          nullable: true
        negativeMarks:
          type: string
          nullable: true
        obtainedMarks:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        completeDuration:
          type: string
          nullable: true
      additionalProperties: false
    AssessmentStatus:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    AssessmentStatusRequestModel:
      type: object
      properties:
        identity:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/AssessmentStatus'
        message:
          type: string
          nullable: true
      additionalProperties: false
    AssessmentSubmissionRequestModel:
      type: object
      properties:
        assessmentQuestionId:
          type: string
          format: uuid
        answers:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    AssessmentTypeEnum:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    AssessmentUserResultResponseModel:
      type: object
      properties:
        questionSetSubmissionId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        submissionDate:
          type: string
          format: date-time
        totalMarks:
          type: number
          format: double
        negativeMarks:
          type: number
          format: double
        obtainedMarks:
          type: number
          format: double
        teacher:
          $ref: '#/components/schemas/UserModel'
        user:
          $ref: '#/components/schemas/UserModel'
        duration:
          type: string
          nullable: true
        completeDuration:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentAnswerResultModel'
          nullable: true
      additionalProperties: false
    AssignmentAttachmentResponseModel:
      type: object
      properties:
        assignmentId:
          type: string
          format: uuid
        assignmentName:
          type: string
          nullable: true
        fileUrl:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        mimeType:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    AssignmentQuestionOptionRequestModel:
      type: object
      properties:
        option:
          type: string
          nullable: true
        isCorrect:
          type: boolean
      additionalProperties: false
    AssignmentQuestionOptionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentId:
          type: string
          format: uuid
        assignmentName:
          type: string
          nullable: true
        option:
          type: string
          nullable: true
        isCorrect:
          type: boolean
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    AssignmentRequestModel:
      type: object
      properties:
        lessonId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        fileUrls:
          type: array
          items:
            type: string
          nullable: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentQuestionOptionRequestModel'
          nullable: true
      additionalProperties: false
    AssignmentResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lessonId:
          type: string
          format: uuid
        lessonName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isActive:
          type: boolean
        type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        user:
          $ref: '#/components/schemas/UserModel'
        assignmentSubmissionId:
          type: string
          format: uuid
          nullable: true
        answer:
          type: string
          nullable: true
        student:
          $ref: '#/components/schemas/UserModel'
        isTrainee:
          type: boolean
        assignmentAttachments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentAttachmentResponseModel'
          nullable: true
        assignmentSubmissionAttachments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentSubmissionAttachmentResponseModel'
          nullable: true
        assignmentQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentQuestionOptionResponseModel'
          nullable: true
      additionalProperties: false
    AssignmentReviewRequestModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        marks:
          type: number
          format: double
        review:
          type: string
          nullable: true
        isPassed:
          type: boolean
      additionalProperties: false
    AssignmentReviewResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lessonId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        mark:
          type: number
          format: double
        review:
          type: string
          nullable: true
        isCompleted:
          type: boolean
          nullable: true
        isPassed:
          type: boolean
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        teacher:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    AssignmentStatus:
      type: object
      properties:
        totalAttend:
          type: integer
          format: int32
        averageMarks:
          type: number
          format: double
        totalPass:
          type: integer
          format: int32
        totalFail:
          type: integer
          format: int32
      additionalProperties: false
    AssignmentSubmissionAttachmentResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentSubmissionId:
          type: string
          format: uuid
        fileUrl:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        mimeType:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    AssignmentSubmissionRequestModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentId:
          type: string
          format: uuid
        selectedOption:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        answer:
          type: string
          nullable: true
        attachmentUrls:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AssignmentSubmissionResponseModel:
      type: object
      properties:
        student:
          $ref: '#/components/schemas/UserModel'
        totalMarks:
          type: number
          format: double
        submissionDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AssignmentSubmissionResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentSubmissionResponseModel'
          nullable: true
      additionalProperties: false
    AssignmentSubmissionStudentResponseModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserModel'
        lessonId:
          type: string
          format: uuid
        lessonSlug:
          type: string
          nullable: true
        userStatus:
          $ref: '#/components/schemas/CourseEnrollmentStatus'
        assignmentReview:
          $ref: '#/components/schemas/AssignmentReviewResponseModel'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentResponseModel'
          nullable: true
      additionalProperties: false
    AssignmentSummaryResponseModel:
      type: object
      properties:
        weekStudents:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
        topStudents:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
        assignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
        mostWrongAnsQues:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    BaseSearchCriteria:
      type: object
      properties:
        currentUserId:
          type: string
          format: uuid
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        sortBy:
          type: string
          nullable: true
        sortType:
          $ref: '#/components/schemas/SortType'
      additionalProperties: false
    BloodGroup:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      format: int32
    CertificateIssueRequestModel:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        issueAll:
          type: boolean
      additionalProperties: false
    CertificateRequestModel:
      required:
        - endDate
        - name
        - startDate
      type: object
      properties:
        name:
          minLength: 1
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        imageUrl:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        institute:
          type: string
          nullable: true
        duration:
          type: integer
          format: int32
        optionalCost:
          type: number
          format: double
      additionalProperties: false
    CertificateResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        imageUrl:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        institute:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CertificateStatus'
        user:
          $ref: '#/components/schemas/UserModel'
        optionalCost:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CertificateResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CertificateResponseModel'
          nullable: true
      additionalProperties: false
    CertificateStatus:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    ChangeEmailRequestModel:
      type: object
      properties:
        oldEmail:
          type: string
          nullable: true
        newEmail:
          type: string
          nullable: true
        confirmEmail:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    ChangeEmailResponseModel:
      type: object
      properties:
        resendToken:
          type: string
          nullable: true
      additionalProperties: false
    ChangePasswordRequestModel:
      type: object
      properties:
        currentPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
        confirmPassword:
          type: string
          nullable: true
      additionalProperties: false
    CommentReplyResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        commentId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    CommentReplyResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommentReplyResponseModel'
          nullable: true
      additionalProperties: false
    CommentRequestModel:
      type: object
      properties:
        content:
          type: string
          nullable: true
      additionalProperties: false
    CommentResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        repliesCount:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    CommentResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponseModel'
          nullable: true
      additionalProperties: false
    CommonResponseModel:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
      additionalProperties: false
    CompanyResponseModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        customConfiguration:
          type: string
          nullable: true
        appVersion:
          type: string
          nullable: true
      additionalProperties: false
    CourseCertificateIssuedResponseModel:
      type: object
      properties:
        courseId:
          type: string
          format: uuid
        courseSlug:
          type: string
          nullable: true
        courseName:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        percentage:
          type: integer
          format: int32
        hasCertificateIssued:
          type: boolean
          nullable: true
        certificateUrl:
          type: string
          nullable: true
        certificateIssuedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CourseCertificateRequestModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        eventStartDate:
          type: string
          format: date-time
        eventEndDate:
          type: string
          format: date-time
      additionalProperties: false
    CourseCertificateResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseId:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        eventStartDate:
          type: string
          format: date-time
        eventEndDate:
          type: string
          format: date-time
        sampleUrl:
          type: string
          nullable: true
      additionalProperties: false
    CourseEnrollmentStatus:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    CourseRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        groupId:
          type: string
          format: uuid
          nullable: true
        language:
          $ref: '#/components/schemas/Language'
        duration:
          type: integer
          format: int32
        levelId:
          type: string
          format: uuid
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        isUnlimitedEndDate:
          type: boolean
        tagIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        trainingEligibilities:
          type: array
          items:
            $ref: '#/components/schemas/TrainingEligibilityCriteriaRequestModel'
          nullable: true
      additionalProperties: false
    CourseResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        groupId:
          type: string
          format: uuid
          nullable: true
        groupName:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CourseStatus'
        language:
          $ref: '#/components/schemas/Language'
        duration:
          type: integer
          format: int32
        levelId:
          type: string
          format: uuid
        levelName:
          type: string
          nullable: true
        userStatus:
          $ref: '#/components/schemas/CourseEnrollmentStatus'
        createdOn:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        isUnlimitedEndDate:
          type: boolean
        user:
          $ref: '#/components/schemas/UserModel'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CourseTagResponseModel'
          nullable: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionResponseModel'
          nullable: true
        percentage:
          type: number
          format: double
          nullable: true
        isEligible:
          type: boolean
        trainingEligibilities:
          type: array
          items:
            $ref: '#/components/schemas/TrainingEligibilityCriteriaResponseModel'
          nullable: true
      additionalProperties: false
    CourseResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CourseResponseModel'
          nullable: true
      additionalProperties: false
    CourseStatisticsResponseModel:
      type: object
      properties:
        totalLessons:
          type: integer
          format: int32
        totalEnrollments:
          type: integer
          format: int32
        totalTeachers:
          type: integer
          format: int32
        totalAssignments:
          type: integer
          format: int32
        totalLectures:
          type: integer
          format: int32
        totalExams:
          type: integer
          format: int32
        totalMeetings:
          type: integer
          format: int32
        totalDocuments:
          type: integer
          format: int32
        meetings1:
          $ref: '#/components/schemas/StringStringDateTimeNullableGuidValueTuple'
        meetingsList:
          type: array
          items:
            $ref: '#/components/schemas/MeetingDashboardResponseModel'
          nullable: true
      additionalProperties: false
    CourseStatus:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    CourseStatusRequestModel:
      type: object
      properties:
        identity:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CourseStatus'
        message:
          type: string
          nullable: true
      additionalProperties: false
    CourseTagResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tagId:
          type: string
          format: uuid
        tagName:
          type: string
          nullable: true
      additionalProperties: false
    CourseTeacherRequestModel:
      type: object
      properties:
        courseIdentity:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    CourseTeacherResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseId:
          type: string
          format: uuid
        courseName:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        createdOn:
          type: string
          format: date-time
        courseCreatedBy:
          type: string
          nullable: true
      additionalProperties: false
    CourseTeacherResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CourseTeacherResponseModel'
          nullable: true
      additionalProperties: false
    DashboardCourseResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        percentage:
          type: number
          format: double
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        students:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
      additionalProperties: false
    DashboardCourseResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/DashboardCourseResponseModel'
          nullable: true
      additionalProperties: false
    DashboardLessonResponseModel:
      type: object
      properties:
        lessonSlug:
          type: string
          nullable: true
        lessonType:
          $ref: '#/components/schemas/LessonType'
        lessonName:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        courseSlug:
          type: string
          nullable: true
        courseEnrollmentBool:
          type: boolean
          nullable: true
        isLive:
          type: boolean
          nullable: true
        courseName:
          type: string
          nullable: true
      additionalProperties: false
    DashboardResponseModel:
      type: object
      properties:
        totalUsers:
          type: integer
          format: int32
        totalActiveUsers:
          type: integer
          format: int32
        totalGroups:
          type: integer
          format: int32
        totalTrainers:
          type: integer
          format: int32
        totalTrainings:
          type: integer
          format: int32
        totalActiveTrainings:
          type: integer
          format: int32
        totalCompletedTrainings:
          type: integer
          format: int32
        totalEnrolledCourses:
          type: integer
          format: int32
        totalInProgressCourses:
          type: integer
          format: int32
        totalCompletedCourses:
          type: integer
          format: int32
      additionalProperties: false
    DepartmentRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    DepartmentResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    DepartmentResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResponseModel'
          nullable: true
      additionalProperties: false
    EligibilityCreationRequestModel:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
        skillId:
          type: string
          format: uuid
          nullable: true
        departmentId:
          type: string
          format: uuid
          nullable: true
        groupId:
          type: string
          format: uuid
          nullable: true
        assessmentId:
          type: string
          format: uuid
          nullable: true
        trainingId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    EligibilityCreationResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/UserRole'
        skillId:
          type: string
          format: uuid
          nullable: true
        skillName:
          type: string
          nullable: true
        assessmentId:
          type: string
          format: uuid
          nullable: true
        assessmentName:
          type: string
          nullable: true
        departmentId:
          type: string
          format: uuid
          nullable: true
        departmentName:
          type: string
          nullable: true
        trainingId:
          type: string
          format: uuid
          nullable: true
        trainingName:
          type: string
          nullable: true
        groupId:
          type: string
          format: uuid
          nullable: true
        groupName:
          type: string
          nullable: true
        isEligible:
          type: boolean
      additionalProperties: false
    EnrollmentMemberStatusEnum:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    ExamStatus:
      type: object
      properties:
        totalAttend:
          type: integer
          format: int32
        passStudents:
          type: integer
          format: int32
        failStudents:
          type: integer
          format: int32
        averageMarks:
          type: number
          format: double
      additionalProperties: false
    ExamSubmissionResponseModel:
      type: object
      properties:
        student:
          $ref: '#/components/schemas/UserModel'
        totalMarks:
          type: number
          format: double
        submissionDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ExamSummaryResponseModel:
      type: object
      properties:
        lessonId:
          type: string
          format: uuid
        lessonName:
          type: string
          nullable: true
        lessonStatus:
          $ref: '#/components/schemas/CourseStatus'
        examStatus:
          $ref: '#/components/schemas/ExamStatus'
        mostWrongAnsQues:
          type: array
          items:
            $ref: '#/components/schemas/MostWrongAnsQues'
          nullable: true
        weekStudents:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
        topStudents:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
        totalMarks:
          type: array
          items:
            $ref: '#/components/schemas/TotalMarks'
          nullable: true
      additionalProperties: false
    ExternalCertificateResponseModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        imageUrl:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        institute:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
      additionalProperties: false
    FeedBackAnswerResponseModel:
      type: object
      properties:
        answer:
          type: string
          nullable: true
      additionalProperties: false
    FeedBackChartOptionsResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        feedbackId:
          type: string
          format: uuid
        feedbackName:
          type: string
          nullable: true
        option:
          type: string
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
        selectedCount:
          type: integer
          format: int32
      additionalProperties: false
    FeedBackChartResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lessonId:
          type: string
          format: uuid
        lessonName:
          type: string
          nullable: true
        feedbackId:
          type: string
          format: uuid
        feedbackName:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isActive:
          type: boolean
        type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        singleChoiceCount:
          type: integer
          format: int32
        multipleChoiceCount:
          type: integer
          format: int32
        ratingCount:
          type: integer
          format: int32
        answerCount:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
        subjectiveAnswer:
          type: array
          items:
            $ref: '#/components/schemas/FeedBackAnswerResponseModel'
          nullable: true
        rating:
          $ref: '#/components/schemas/FeedbackRatingResponseModel'
        feedbackQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/FeedBackChartOptionsResponseModel'
          nullable: true
      additionalProperties: false
    FeedbackQuestionOptionRequestModel:
      type: object
      properties:
        option:
          type: string
          nullable: true
      additionalProperties: false
    FeedbackQuestionOptionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        feedbackId:
          type: string
          format: uuid
        feedbackName:
          type: string
          nullable: true
        option:
          type: string
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    FeedbackRatingResponseModel:
      type: object
      properties:
        fiveRating:
          type: integer
          format: int32
        fourRating:
          type: integer
          format: int32
        threeRating:
          type: integer
          format: int32
        twoRating:
          type: integer
          format: int32
        oneRating:
          type: integer
          format: int32
      additionalProperties: false
    FeedbackRequestModel:
      type: object
      properties:
        lessonId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackQuestionOptionRequestModel'
          nullable: true
      additionalProperties: false
    FeedbackResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lessonId:
          type: string
          format: uuid
        lessonName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        isActive:
          type: boolean
        type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        user:
          $ref: '#/components/schemas/UserModel'
        feedbackSubmissionId:
          type: string
          format: uuid
          nullable: true
        answer:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        student:
          $ref: '#/components/schemas/UserModel'
        feedbackQuestionOptions:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackQuestionOptionResponseModel'
          nullable: true
        isTrainee:
          type: boolean
      additionalProperties: false
    FeedbackSubmissionRequestModel:
      type: object
      properties:
        feedbackId:
          type: string
          format: uuid
        selectedOption:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        answer:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    FeedbackSubmissionStudentResponseModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserModel'
        lessonId:
          type: string
          format: uuid
        lessonSlug:
          type: string
          nullable: true
      additionalProperties: false
    FeedbackTypeEnum:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    ForgotPasswordRequestModel:
      required:
        - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
      additionalProperties: false
    Gender:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    GeneralSettingRequestModel:
      type: object
      properties:
        logoUrl:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        companyAddress:
          type: string
          nullable: true
        companyContactNumber:
          type: string
          nullable: true
        emailSignature:
          type: string
          nullable: true
        customConfiguration:
          type: string
          nullable: true
      additionalProperties: false
    GeneralSettingResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        logoUrl:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        companyAddress:
          type: string
          nullable: true
        companyContactNumber:
          type: string
          nullable: true
        emailSignature:
          type: string
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        customConfiguration:
          type: string
          nullable: true
      additionalProperties: false
    GroupAddMemberResponseModel:
      type: object
      properties:
        httpStatusCode:
          $ref: '#/components/schemas/HttpStatusCode'
        message:
          type: string
          nullable: true
      additionalProperties: false
    GroupFileResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        mimeType:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    GroupFileResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/GroupFileResponseModel'
          nullable: true
      additionalProperties: false
    GroupMemberResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        groupName:
          type: string
          nullable: true
        isActive:
          type: boolean
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    GroupMemberResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/GroupMemberResponseModel'
          nullable: true
      additionalProperties: false
    GroupRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    GroupResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        memberCount:
          type: integer
          format: int32
          nullable: true
        courseCount:
          type: integer
          format: int32
          nullable: true
        attachmentCount:
          type: integer
          format: int32
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    GroupResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/GroupResponseModel'
          nullable: true
      additionalProperties: false
    HttpStatusCode:
      enum:
        - 100
        - 101
        - 102
        - 103
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 421
        - 422
        - 423
        - 424
        - 426
        - 428
        - 429
        - 431
        - 451
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        - 506
        - 507
        - 508
        - 510
        - 511
      type: integer
      format: int32
    IdentityType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    Language:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    LessonReorderRequestModel:
      type: object
      properties:
        sectionIdentity:
          type: string
          nullable: true
        ids:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    LessonRequestModel:
      type: object
      properties:
        sectionIdentity:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        videoUrl:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        documentUrl:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        order:
          type: integer
          format: int32
        isMandatory:
          type: boolean
        type:
          $ref: '#/components/schemas/LessonType'
        meeting:
          $ref: '#/components/schemas/MeetingRequestModel'
        questionSet:
          $ref: '#/components/schemas/QuestionSetRequestModel'
      additionalProperties: false
    LessonResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        videoUrl:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        documentUrl:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        isMandatory:
          type: boolean
        type:
          $ref: '#/components/schemas/LessonType'
        isDeleted:
          type: boolean
        status:
          $ref: '#/components/schemas/CourseStatus'
        courseId:
          type: string
          format: uuid
        courseName:
          type: string
          nullable: true
        sectionId:
          type: string
          format: uuid
        sectionName:
          type: string
          nullable: true
        meetingId:
          type: string
          format: uuid
          nullable: true
        questionSetId:
          type: string
          format: uuid
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        isCompleted:
          type: boolean
        isPassed:
          type: boolean
        nextLessonSlug:
          type: string
          nullable: true
        hasResult:
          type: boolean
          nullable: true
        hasFeedbackSubmitted:
          type: boolean
          nullable: true
        hasSubmittedAssignment:
          type: boolean
          nullable: true
        hasReviewedAssignment:
          type: boolean
          nullable: true
        remainingAttempt:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        assignmentExpired:
          type: boolean
        meeting:
          $ref: '#/components/schemas/MeetingResponseModel'
        questionSet:
          $ref: '#/components/schemas/QuestionSetResponseModel'
        assignmentReview:
          $ref: '#/components/schemas/AssignmentReviewResponseModel'
        zoomId:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        hasAttended:
          type: boolean
          nullable: true
        isTrainee:
          type: boolean
      additionalProperties: false
    LessonResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/LessonResponseModel'
          nullable: true
      additionalProperties: false
    LessonStatisticsResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        lessonType:
          $ref: '#/components/schemas/LessonType'
        courseId:
          type: string
          format: uuid
        courseSlug:
          type: string
          nullable: true
        courseName:
          type: string
          nullable: true
        sectionId:
          type: string
          format: uuid
        sectionSlug:
          type: string
          nullable: true
        sectionName:
          type: string
          nullable: true
        enrolledStudent:
          type: integer
          format: int32
        lessonWatched:
          type: integer
          format: int32
        isMandatory:
          type: boolean
      additionalProperties: false
    LessonStatisticsResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/LessonStatisticsResponseModel'
          nullable: true
      additionalProperties: false
    LessonStudentResponseModel:
      type: object
      properties:
        lessonId:
          type: string
          format: uuid
        lessonSlug:
          type: string
          nullable: true
        lessonName:
          type: string
          nullable: true
        lessonType:
          $ref: '#/components/schemas/LessonType'
        questionSetId:
          type: string
          format: uuid
          nullable: true
        isCompleted:
          type: boolean
          nullable: true
        isPassed:
          type: boolean
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        isAssignmentReviewed:
          type: boolean
          nullable: true
        attendanceReviewed:
          type: boolean
          nullable: true
      additionalProperties: false
    LessonStudentResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/LessonStudentResponseModel'
          nullable: true
      additionalProperties: false
    LessonType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      format: int32
    LevelRequestModel:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
      additionalProperties: false
    LevelResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    LoginRequestModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        isEmail:
          type: boolean
          readOnly: true
      additionalProperties: false
    MailNotificationRequestModel:
      type: object
      properties:
        mailName:
          type: string
          nullable: true
        mailSubject:
          type: string
          nullable: true
        mailMessage:
          type: string
          nullable: true
        mailType:
          $ref: '#/components/schemas/MailType'
        isActive:
          type: boolean
      additionalProperties: false
    MailNotificationResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        mailName:
          type: string
          nullable: true
        mailSubject:
          type: string
          nullable: true
        mailMessage:
          type: string
          nullable: true
        mailType:
          $ref: '#/components/schemas/MailType'
        isActive:
          type: boolean
      additionalProperties: false
    MailNotificationResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/MailNotificationResponseModel'
          nullable: true
      additionalProperties: false
    MailSendRequestModel:
      type: object
      properties:
        emailAddress:
          type: string
          format: email
          nullable: true
      additionalProperties: false
    MailType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
      type: integer
      format: int32
    MaritalStatus:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    MediaType:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    MeetingDashboardResponseModel:
      type: object
      properties:
        lessonSlug:
          type: string
          nullable: true
        passcode:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        zoomId:
          type: string
          format: uuid
      additionalProperties: false
    MeetingJoinResponseModel:
      type: object
      properties:
        slug:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        jwtToken:
          type: string
          nullable: true
        zakToken:
          type: string
          nullable: true
        sdkKey:
          type: string
          nullable: true
        meetingId:
          type: integer
          format: int64
          nullable: true
        passcode:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    MeetingReportResponseModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        joinedTime:
          type: string
          nullable: true
        leftTime:
          type: string
          nullable: true
        duration:
          type: integer
          format: int32
        lessonId:
          type: string
          format: uuid
      additionalProperties: false
    MeetingRequestModel:
      type: object
      properties:
        meetingStartDate:
          type: string
          format: date-time
        meetingDuration:
          type: integer
          format: int32
        zoomLicenseId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    MeetingResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        meetingNumber:
          type: integer
          format: int64
          nullable: true
        passcode:
          type: string
          nullable: true
        zoomLicenseId:
          type: string
          format: uuid
        duration:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    MostWrongAnsQues:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    Nationality:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    PhysicalLessonReviewRequestModel:
      type: object
      properties:
        identity:
          type: string
          nullable: true
        isPassed:
          type: boolean
        message:
          type: string
          nullable: true
        userId:
          type: string
          format: uuid
      additionalProperties: false
    PoolRole:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    QuestionData:
      type: object
      properties:
        question:
          type: string
          nullable: true
        options:
          type: array
          items:
            type: string
          nullable: true
        answer:
          type: string
          nullable: true
      additionalProperties: false
    QuestionOptionRequestModel:
      type: object
      properties:
        option:
          type: string
          nullable: true
        isCorrect:
          type: boolean
      additionalProperties: false
    QuestionOptionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        option:
          type: string
          nullable: true
        isCorrect:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
      additionalProperties: false
    QuestionPoolRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    QuestionPoolResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isDeleted:
          type: boolean
        questionCount:
          type: integer
          format: int32
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    QuestionPoolResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionPoolResponseModel'
          nullable: true
      additionalProperties: false
    QuestionPoolTeacherRequestModel:
      type: object
      properties:
        questionPoolIdentity:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    QuestionPoolTeacherResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questionPoolId:
          type: string
          format: uuid
        questionPoolName:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/PoolRole'
        user:
          $ref: '#/components/schemas/UserModel'
        createdOn:
          type: string
          format: date-time
      additionalProperties: false
    QuestionPoolTeacherResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionPoolTeacherResponseModel'
          nullable: true
      additionalProperties: false
    QuestionRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        tags:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        description:
          type: string
          nullable: true
        questionPoolId:
          type: string
          format: uuid
        answers:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionRequestModel'
          nullable: true
      additionalProperties: false
    QuestionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questionSetQuestionId:
          type: string
          format: uuid
          nullable: true
        questionPoolQuestionId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        questionPoolId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            $ref: '#/components/schemas/QuestionTagResponseModel'
          nullable: true
        questionOptions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionResponseModel'
          nullable: true
      additionalProperties: false
    QuestionResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionResponseModel'
          nullable: true
      additionalProperties: false
    QuestionResultOption:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
          nullable: true
        isCorrect:
          type: boolean
        isSelected:
          type: boolean
      additionalProperties: false
    QuestionSetAddQuestionRequestModel:
      type: object
      properties:
        questionPoolQuestionIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    QuestionSetAnswerResultModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        hints:
          type: string
          nullable: true
        attachments:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        questionOptions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionResultOption'
          nullable: true
        isCorrect:
          type: boolean
        orderNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    QuestionSetRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        negativeMarking:
          type: number
          format: double
        questionMarking:
          type: number
          format: double
        passingWeightage:
          type: number
          format: double
        allowedRetake:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        noOfQuestion:
          type: integer
          format: int32
        isShuffle:
          type: boolean
        showAll:
          type: boolean
      additionalProperties: false
    QuestionSetResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        negativeMarking:
          type: number
          format: double
        totalQuestions:
          type: integer
          format: int32
        totalMarks:
          type: number
          format: double
        questionMarking:
          type: number
          format: double
        passingWeightage:
          type: number
          format: double
        allowedRetake:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
        noOfQuestion:
          type: integer
          format: int32
        isShuffle:
          type: boolean
        showAll:
          type: boolean
      additionalProperties: false
    QuestionSetResultDetailModel:
      type: object
      properties:
        questionSetSubmissionId:
          type: string
          format: uuid
        submissionDate:
          type: string
          format: date-time
        totalMarks:
          type: string
          nullable: true
        negativeMarks:
          type: string
          nullable: true
        obtainedMarks:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        completeDuration:
          type: string
          nullable: true
      additionalProperties: false
    QuestionSetResultResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questionSetId:
          type: string
          format: uuid
        obtainedMarks:
          type: number
          format: double
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    QuestionSetResultResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionSetResultResponseModel'
          nullable: true
      additionalProperties: false
    QuestionSetSubmissionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        startDateTime:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionResponseModel'
          nullable: true
        role:
          $ref: '#/components/schemas/CourseEnrollmentStatus'
      additionalProperties: false
    QuestionSetUserResultResponseModel:
      type: object
      properties:
        questionSetSubmissionId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        submissionDate:
          type: string
          format: date-time
        totalMarks:
          type: number
          format: double
        negativeMarks:
          type: number
          format: double
        obtainedMarks:
          type: number
          format: double
        teacher:
          $ref: '#/components/schemas/UserModel'
        user:
          $ref: '#/components/schemas/UserModel'
        duration:
          type: string
          nullable: true
        completeDuration:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionSetAnswerResultModel'
          nullable: true
      additionalProperties: false
    QuestionTagResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tagId:
          type: string
          format: uuid
        tagName:
          type: string
          nullable: true
      additionalProperties: false
    QuestionTypeEnum:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    RefreshTokenRequestModel:
      required:
        - token
      type: object
      properties:
        token:
          minLength: 1
          type: string
      additionalProperties: false
    ResendChangeEmailRequestModel:
      type: object
      properties:
        token:
          type: string
          nullable: true
      additionalProperties: false
    ResetPasswordRequestModel:
      type: object
      properties:
        newPassword:
          type: string
          nullable: true
        confirmPassword:
          type: string
          nullable: true
        passwordChangeToken:
          type: string
          nullable: true
      additionalProperties: false
    SMTPSettingRequestModel:
      type: object
      properties:
        mailServer:
          type: string
          nullable: true
        mailPort:
          type: integer
          format: int32
        senderName:
          type: string
          nullable: true
        senderEmail:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        replyTo:
          type: string
          nullable: true
        useSSL:
          type: boolean
      additionalProperties: false
    SMTPSettingResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        mailServer:
          type: string
          nullable: true
        mailPort:
          type: integer
          format: int32
        senderName:
          type: string
          nullable: true
        senderEmail:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        replyTo:
          type: string
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    SectionRequestModel:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
      additionalProperties: false
    SectionResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        courseId:
          type: string
          format: uuid
        duration:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/LessonResponseModel'
          nullable: true
      additionalProperties: false
    SectionResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SectionResponseModel'
          nullable: true
      additionalProperties: false
    ServerLogsResponseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/SeverityType'
        timeStamp:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ServerLogsResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ServerLogsResponseModel'
          nullable: true
      additionalProperties: false
    SettingValue:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    SeverityType:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    SignatureRequestModel:
      type: object
      properties:
        fileURL:
          type: string
          nullable: true
        designation:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
      additionalProperties: false
    SignatureResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseId:
          type: string
          format: uuid
        designation:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        fileUrl:
          type: string
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    SkillAssessmentRule:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    SkillsCriteriaRequestModel:
      type: object
      properties:
        skillAssessmentRule:
          $ref: '#/components/schemas/SkillAssessmentRule'
        percentage:
          type: number
          format: double
        skillId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SkillsCriteriaResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        percentage:
          type: number
          format: double
        skillId:
          type: string
          format: uuid
          nullable: true
        skillAssessmentRule:
          $ref: '#/components/schemas/SkillAssessmentRule'
        skillTypeName:
          type: string
          nullable: true
        isEligible:
          type: boolean
      additionalProperties: false
    SkillsRequestModel:
      type: object
      properties:
        skillName:
          type: string
          nullable: true
        isActive:
          type: boolean
        description:
          type: string
          nullable: true
      additionalProperties: false
    SkillsResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        skillName:
          type: string
          nullable: true
        isActive:
          type: boolean
        description:
          type: string
          nullable: true
        userModel:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
      additionalProperties: false
    SkillsResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SkillsResponseModel'
          nullable: true
      additionalProperties: false
    SkillsUserResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        skillName:
          type: string
          nullable: true
      additionalProperties: false
    SortType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    StorageSettingRequestModel:
      required:
        - type
        - values
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StorageType'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SettingValue'
      additionalProperties: false
    StorageSettingResponseModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StorageType'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SettingValue'
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    StorageType:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    StringStringDateTimeNullableGuidValueTuple:
      type: object
      additionalProperties: false
    StudentAssessmentResultResponseModel:
      type: object
      properties:
        attemptCount:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
        assessmentSetResultDetails:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentSetResultDetailModel'
          nullable: true
        hasExceededAttempt:
          type: boolean
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    StudentCourseStatisticsResponseModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        fullName:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        percentage:
          type: number
          format: double
        lessonId:
          type: string
          format: uuid
          nullable: true
        lessonSlug:
          type: string
          nullable: true
        lessonName:
          type: string
          nullable: true
        hasCertificateIssued:
          type: boolean
          nullable: true
        certificateUrl:
          type: string
          nullable: true
        certificateIssuedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    StudentCourseStatisticsResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseStatisticsResponseModel'
          nullable: true
      additionalProperties: false
    StudentResultResponseModel:
      type: object
      properties:
        attemptCount:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserModel'
        questionSetSubmissions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionSetResultDetailModel'
          nullable: true
        hasExceededAttempt:
          type: boolean
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    TagRequestModel:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
      additionalProperties: false
    TagResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    TagResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/TagResponseModel'
          nullable: true
      additionalProperties: false
    TotalMarks:
      type: object
      properties:
        marks:
          type: number
          format: double
      additionalProperties: false
    TrainerResponseModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/UserRole'
        email:
          type: string
          nullable: true
      additionalProperties: false
    TrainingEligibilityCriteriaRequestModel:
      type: object
      properties:
        eligibility:
          $ref: '#/components/schemas/TrainingEligibilityEnum'
        eligibilityId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    TrainingEligibilityCriteriaResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eligibility:
          $ref: '#/components/schemas/TrainingEligibilityEnum'
        eligibilityId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    TrainingEligibilityEnum:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    TrainingTypeEnum:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    UserModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        departmentId:
          type: string
          nullable: true
        departmentName:
          type: string
          nullable: true
      additionalProperties: false
    UserModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
          nullable: true
      additionalProperties: false
    UserRequestModel:
      type: object
      properties:
        memberId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        profession:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        publicUrls:
          type: string
          nullable: true
        departmentId:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: '#/components/schemas/UserStatus'
      additionalProperties: false
    UserResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        profession:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        publicUrls:
          type: string
          nullable: true
        departmentId:
          type: string
          format: uuid
          nullable: true
        departmentName:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/UserStatus'
        createdOn:
          type: string
          format: date-time
        fullName:
          type: string
          nullable: true
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/CourseCertificateIssuedResponseModel'
          nullable: true
        externalCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ExternalCertificateResponseModel'
          nullable: true
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillsUserResponseModel'
          nullable: true
        memberId:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        identityType:
          $ref: '#/components/schemas/IdentityType'
        identityNumber:
          type: string
          nullable: true
        identityIssuedBy:
          type: string
          nullable: true
        identityIssuedOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    UserResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserResponseModel'
          nullable: true
      additionalProperties: false
    UserRole:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    UserStatus:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    UserUpdateRequestModel:
      type: object
      properties:
        memberId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        profession:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        publicUrls:
          type: string
          nullable: true
        departmentId:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: '#/components/schemas/UserStatus'
        gender:
          $ref: '#/components/schemas/Gender'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        nationality:
          $ref: '#/components/schemas/Nationality'
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        birthDateBS:
          type: string
          format: date-time
          nullable: true
        birthDateAD:
          type: string
          format: date-time
          nullable: true
        employmentType:
          type: string
          nullable: true
        branchId:
          type: string
          format: uuid
          nullable: true
        joinedDateBS:
          type: string
          format: date-time
          nullable: true
        joinedDateAD:
          type: string
          format: date-time
          nullable: true
        permanentCountry:
          type: string
          nullable: true
        permanentState:
          type: string
          nullable: true
        permanentDistrict:
          type: string
          nullable: true
        permanentCity:
          type: string
          nullable: true
        permanentMunicipality:
          type: string
          nullable: true
        permanentWard:
          type: string
          nullable: true
        addressIsSame:
          type: boolean
        currentCountry:
          type: string
          nullable: true
        currentState:
          type: string
          nullable: true
        currentDistrict:
          type: string
          nullable: true
        currentCity:
          type: string
          nullable: true
        currentMunicipality:
          type: string
          nullable: true
        currentWard:
          type: string
          nullable: true
        currentAddress:
          type: string
          nullable: true
        personalEmail:
          type: string
          nullable: true
        mobileNumberSecondary:
          type: string
          nullable: true
        identityType:
          $ref: '#/components/schemas/IdentityType'
        identityNumber:
          type: string
          nullable: true
        identityIssuedBy:
          type: string
          nullable: true
        identityIssuedOn:
          type: string
          format: date-time
          nullable: true
        fatherName:
          type: string
          nullable: true
        motherName:
          type: string
          nullable: true
        spouseName:
          type: string
          nullable: true
        grandFatherName:
          type: string
          nullable: true
        memberPhone:
          type: string
          nullable: true
        memberPermanentAddress:
          type: string
          nullable: true
        memberCurrentAddress:
          type: string
          nullable: true
        familyAddressIsSame:
          type: boolean
      additionalProperties: false
    VerificationTokenResponseModel:
      type: object
      properties:
        token:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    VerifyResetTokenModel:
      required:
        - email
        - token
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        token:
          minLength: 1
          type: string
      additionalProperties: false
    WatchHistoryRequestModel:
      type: object
      properties:
        courseIdentity:
          type: string
          nullable: true
        lessonIdentity:
          type: string
          nullable: true
        watchedPercentage:
          type: integer
          format: int32
      additionalProperties: false
    WatchHistoryResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseSlug:
          type: string
          nullable: true
        courseName:
          type: string
          nullable: true
        courseThumbnail:
          type: string
          nullable: true
        lessonSlug:
          type: string
          nullable: true
        lessonName:
          type: string
          nullable: true
        isCompleted:
          type: boolean
        watchedDate:
          type: string
          format: date-time
        teacher:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    ZoomLicenseRequestModel:
      type: object
      properties:
        licenseEmail:
          type: string
          nullable: true
        hostId:
          type: string
          nullable: true
        capacity:
          type: integer
          format: int32
      additionalProperties: false
    ZoomLicenseResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        licenseEmail:
          type: string
          nullable: true
        hostId:
          type: string
          nullable: true
        capacity:
          type: integer
          format: int32
        isActive:
          type: boolean
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
    ZoomLicenseResponseModelSearchResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ZoomLicenseResponseModel'
          nullable: true
      additionalProperties: false
    ZoomSettingRequestModel:
      type: object
      properties:
        oAuthAccountId:
          type: string
          nullable: true
        oAuthClientId:
          type: string
          nullable: true
        oAuthClientSecret:
          type: string
          nullable: true
        sdkKey:
          type: string
          nullable: true
        sdkSecret:
          type: string
          nullable: true
        webhookSecret:
          type: string
          nullable: true
        isRecordingEnabled:
          type: boolean
      additionalProperties: false
    ZoomSettingResponseModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        oAuthAccountId:
          type: string
          nullable: true
        oAuthClientId:
          type: string
          nullable: true
        oAuthClientSecret:
          type: string
          nullable: true
        sdkKey:
          type: string
          nullable: true
        sdkSecret:
          type: string
          nullable: true
        webhookSecret:
          type: string
          nullable: true
        isRecordingEnabled:
          type: boolean
        updatedOn:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/UserModel'
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer\""
      name: Authorization
      in: header
security:
  - Bearer: []
